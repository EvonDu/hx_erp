<?phpdefined('BASEPATH') OR exit('No direct script access allowed');include_once(dirname(BASEPATH).'/inherit/BaseController.php');class Form extends BaseController {    /**     * constructor.     */    function __construct()    {        //父类        parent::__construct();        //环境变量设置        $this->_controller->views = "sell/form/Form";        $this->_controller->layout = "layout/amaze/hx";        //类库        $this->load->library('evon/ApiResult','','apiresult');        //加载模型        $this->load->model('sell/form/Form_model',"model",true);        $this->load->model('sell/client/Client_model',"m_client",true);        $this->load->model('sell/form/FormSpu_model',"m_spu",true);        $this->load->model('sell/form/FormSku_model',"m_sku",true);        $this->load->model('goods/Goods_model',"m_goods",true);        $this->load->model('goods/Sku_model',"m_good_sku",true);    }    /**     * index     */    public function index()    {        $model = $this->model;        $param = $_REQUEST;        $page = isset($param["page"])?$param["page"]:1;        $size = isset($param["size"])?$param["size"]:20;        $condition = isset($param["condition"])?(array)json_decode($param["condition"]):[];        $sort = isset($param["sort"])?(array)json_decode($param["sort"]):[$model->getPk()=>"ASC"];        $result = $model->search($page,$size,$condition,$sort);        $this->show("list",[            "searched"=>$result,            "page"=>$page,            "size"=>$size,        ]);    }    /**     * index     */    public function index2()    {        $model = $this->model;        $param = $_REQUEST;        $page = isset($param["page"])?$param["page"]:1;        $size = isset($param["size"])?$param["size"]:20;        $condition = isset($param["condition"])?(array)json_decode($param["condition"]):[];        $sort = isset($param["sort"])?(array)json_decode($param["sort"]):[$model->getPk()=>"ASC"];        $result = $model->search($page,$size,$condition,$sort);        $this->show("index",[            "searched"=>$result,            "page"=>$page,            "size"=>$size,        ]);    }    /**     * create     */    public function create(){        $model = $this->model;        $param = $_REQUEST;        if (!empty($param) && $model->load($param) && $model->save()) {            redirect($this->_controller->views."/index");        } else {            $this->show("create",[                "model"=>$model,            ]);        }    }    /**     * update     */    public function update2($id){        $model = $this->model->get($id);        $param = $_REQUEST;        if (!empty($param) && $model->load($param) && $model->save()) {            redirect($this->_controller->views."/index");        } else {            $this->show("update",[                "model"=>$model,            ]);        }    }    /**     * delete     */    public function delete($id){        $model = $this->model->get($id);        $bool = $model->delete();        if($bool)            redirect($this->_controller->views."/index");    }    /**     * view     */    public function view($id){        $model = $this->model->get($id);        var_dump($model);    }    /**     * 添加订单     */    public function add(){        $model = $this->model;        $model->order_num = $this->model->createOrderNum();        $model->payment = 0;        $model->client = null;        $model->goods = [];        $paymentMap = $this->model->getPaymentMap();        //调用视图        $this->show("sellform",[            "model"=>$model,            "paymentMap"=>$paymentMap        ]);    }    /**     * 修改订单     */    public function modify($id){        //获取模型信息        $model = $this->model->get($id);        $paymentMap = $this->model->getPaymentMap();        //判断是否存在在，并且能更新        if(empty($model->id) || (string)$model->status != "0") {            redirect($this->_controller->views . "/index");        }        //获取客户        $client = empty($model->client_id)?null:$this->m_client->get($model->client_id);        $model->client = $client;        //获取列表        $spus = $this->m_spu->searchAll(['form_id'=>$model->id]);        $skus = $this->m_sku->searchAll(['form_id'=>$model->id]);        $list = array();        foreach($spus->list as $spu){            $item = $spu;            $item->skus = array();            foreach($skus->list as $sku){                if($sku->form_spu_id == $spu->id)                    $spu->skus[] = $sku;            }            $list[] = $item;        }        $model->goods = $list;        //跳转到视图        $this->show("sellform",[            "model"=>$model,            "paymentMap"=>$paymentMap        ]);    }    /**     * VUE查询接口     */    public function search_api(){        //查询        $model = $this->model;        $param = $_REQUEST;        $start_date = isset($param["start_date"])?$param["start_date"]:null;        $end_date = isset($param["end_date"])?$param["end_date"]:null;        $sort = isset($param["sort"])?(array)json_decode($param["sort"]):[$model->getPk()=>"ASC"];        //设置时区        date_default_timezone_set('Asia/Shanghai');        //拼凑查询条件        $condition = [];        if($start_date)            $condition["create_at >"] = strtotime($start_date);        if($end_date)            $condition["create_at <="] = strtotime($end_date)+86400;        //查询        $result = $model->searchAll($condition,$sort);        //遍历处理        $list = [];        foreach($result->list as $item){            //获取客户            $Mclient = $this->m_client->_new();            $client = $Mclient->get($item->client_id);            //添加数据            $item->client = $client;            $item->status_name = $item->getStatusName();            $item->date = date("Y/m/d",$item->create_at);            //加入列表            $list[] = $item;        }        //输出        $this->apiresult->sentApiSuccess($list);    }    /**     * 添加/修改 订单接口     */    public function update_api(){        //参数检测        $this->apiresult->checkApiParameter(['user_id','client_id',"total_num","total_price","payment"],-1);        $param = $_REQUEST;        $param["status"] = 0;        //设置模型        if(isset($param["id"]))            $model = $this->model->get($param["id"]);        else            $model = $this->model;        //事务方式处理表单        $bool = $model->updateForm($param);        //输出结果        if($bool)            $this->apiresult->sentApiSuccess();        else            $this->apiresult->sentApiError(-1,"fail");    }    /**     * 订单作废     */    public function scrap_api(){        //参数检测        $this->apiresult->checkApiParameter(['id'],-1);        $id = $_REQUEST["id"];        //获取模型        $model = $this->model->get($id);        //判断并修改状态        if($model->status == 0)        {            $model->status = 3;            if($model->save())                $this->apiresult->sentApiSuccess();            else                $this->apiresult->sentApiError(-1,"fail");        }        else        {            $this->apiresult->sentApiError(-1,"status error");        }    }    /**     * 查询商品     */    public function search_goods_api(){        //参数检测        $this->apiresult->checkApiParameter(['key'],-1);        $key = $_REQUEST["key"];        //搜索出列表        $list = array();        $goods = $this->m_goods->search_goods(["goods_id"=>$key]);        foreach($goods["result_rows"] as $good){            //转化商品spu为表单spu对象            $item = $this->m_spu->_new();            $item->spu_id = $good["goods_id"];            $item->snap_price = $good["price"];            $item->snap_pic = $good["pic"];            $item->snap_pic_normal = $good["pic_normal"];            //获取sku            $skus = array();            $skus_list = $this->m_good_sku->get_sku_list_info_by_goods_id($good["goods_id"]);            foreach($skus_list["result_rows"] as $sku){                //转化商品sku为表单sku对象                $sku_item = $this->m_sku->_new();                $sku_item->sku_id = $sku["sku_id"];                $sku_item->color = $sku["color_info"]["name"];                $sku_item->size = $sku["size_info"]["size_info"];                $sku_item->num = 0;                $skus[] = $sku_item;            }            $item->skus = $skus;            $list[] = $item;        }        //返回结果        $this->apiresult->sentApiSuccess($list);    }}